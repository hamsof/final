{"ast":null,"code":"// import React, { useState } from \"react\";\n// import { Container, Row, Button, Alert } from \"react-bootstrap\";\n// import Form from \"react-bootstrap/Form\";\n// // + Import the validators\n// import { validateEmail } from '../../utils/helpers';\n// function Contact() {\n// \tconst [name, setName] = useState('');\n// \tconst [email, setEmail] = useState('');\n// \tconst [message, setMessage] = useState('');\n// \tconst [welcomeMessage, setWelcomeMessage] = useState('');\n// \tconst [error, setError] = useState('');\n// \tconst handleInputChange = (e) => {\n// \t\t// Getting the value and name of the input which triggered the change\n// \t\tconst { target } = e;\n// \t\tconst inputType = target.name;\n// \t\tconst inputValue = target.value;\n// \t\t// Based on the input type, we set the state of either email, username, and password\n// \t\tif (inputType === 'name') {\n// \t\t\tsetName(inputValue);\n// \t\t} else if (inputType === 'email') {\n// \t\t\tsetEmail(inputValue);\n// \t\t} else {\n// \t\t\tsetMessage(inputValue);\n// \t\t}\n// \t};\n// \tconst handleFormSubmit = (e) => {\n// \t\t// Preventing the default behavior of the form submit (which is to refresh the page)\n// \t\te.preventDefault();\n// \t\t// First we check to see if the email is not valid or if the userName is empty. If so we set an error message to be displayed on the page.\n// \t\tif (!name) {\n// \t\t\tsetError('A valid name is required.');\n// \t\t\t// We want to exit out of this code block if something is wrong so that the user can correct it\n// \t\t\treturn;\n// \t\t\t// Then we check to see if the password is not valid. If so, we set an error message regarding the password.\n// \t\t}\n// \t\tif(!validateEmail(email) || !email) {\n// \t\t\tsetError('A valid email is required.');\n// \t\t\treturn;\n// \t\t}\n// \t\tif (!message) {\n// \t\t\tsetError('Message is required');\n// \t\t\treturn;\n// \t\t}\n// \t\tconst msg = 'Thank you for your message, ' + name + '! I will get back to you as soon as possible.';\n// \t\tsetWelcomeMessage(msg);\n// \t\t// If everything goes according to plan, we want to clear out the input after a successful registration.\n// \t\tsetName('');\n// \t\tsetEmail('');\n// \t\tsetMessage('');\n// \t};\n// \treturn (\n// \t\t<Container>\n// \t\t\t<Row>\n// \t\t\t\t<div className=\"jumbotron jumbotron-fluid mb-0\">\n// \t\t\t\t\t<Container>\n// \t\t\t\t\t\t<h1 className=\"display-4 pb-0 pb-sm-0 pb-md-0 mb-2 text-center\">Contact Me</h1>\n// \t\t\t\t\t</Container>\n// \t\t\t\t</div>\n// \t\t\t</Row>\n// \t\t\t{/* Image of me and a paragraph next to the picture built in Bootstrap */}\n// \t\t\t<Row>\n// \t\t\t\t<Container>\n// \t\t\t\t\t<Form className=\"form\">\n// \t\t\t\t\t\t<Form.Group>\n// \t\t\t\t\t\t\t<Form.Label htmlFor=\"name\">Name</Form.Label>\n// \t\t\t\t\t\t\t<Form.Control onChange={handleInputChange} type=\"text\" placeholder=\"Enter name\" name=\"name\" value={name} required />\n// \t\t\t\t\t\t</Form.Group>\n// \t\t\t\t\t\t<Form.Group>\n// \t\t\t\t\t\t\t<Form.Label>Email address</Form.Label>\n// \t\t\t\t\t\t\t<Form.Control onChange={handleInputChange} type=\"email\" placeholder=\"name@example.com\" name=\"email\" value={email} required />\n// \t\t\t\t\t\t</Form.Group>\n// \t\t\t\t\t\t<Form.Group>\n// \t\t\t\t\t\t\t<Form.Label htmlFor=\"message\">Message</Form.Label>\n// \t\t\t\t\t\t\t<Form.Control onChange={handleInputChange} as=\"textarea\" rows={3} required name=\"message\" value={message} />\n// \t\t\t\t\t\t</Form.Group>\n// \t\t\t\t\t\t<Button variant=\"primary\" type=\"submit\" onClick={handleFormSubmit}>Submit</Button>\n// \t\t\t\t\t</Form>\n// \t\t\t\t\t{error && (\n// \t\t\t\t\t\t<div>\n// \t\t\t\t\t\t\t<p className=\"error-text\">{error}</p>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t)}\n// \t\t\t\t\t<Alert variant=\"success\">\n// \t\t\t\t\t\t<p>{welcomeMessage}</p>\n//   \t\t\t\t\t</Alert>\n// \t\t\t\t</Container>\n// \t\t\t</Row>\n// \t\t</Container>\n// \t);\n// }\n// export default Contact;","map":{"version":3,"sources":["C:/Users/hamsof/Desktop/final/react-portfolio/src/components/Contact/index.js"],"names":[],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { useState } from \"react\";\r\n// import { Container, Row, Button, Alert } from \"react-bootstrap\";\r\n// import Form from \"react-bootstrap/Form\";\r\n\r\n// // + Import the validators\r\n// import { validateEmail } from '../../utils/helpers';\r\n\r\n\r\n// function Contact() {\r\n// \tconst [name, setName] = useState('');\r\n// \tconst [email, setEmail] = useState('');\r\n// \tconst [message, setMessage] = useState('');\r\n// \tconst [welcomeMessage, setWelcomeMessage] = useState('');\r\n// \tconst [error, setError] = useState('');\r\n\r\n// \tconst handleInputChange = (e) => {\r\n// \t\t// Getting the value and name of the input which triggered the change\r\n// \t\tconst { target } = e;\r\n// \t\tconst inputType = target.name;\r\n// \t\tconst inputValue = target.value;\r\n\r\n// \t\t// Based on the input type, we set the state of either email, username, and password\r\n// \t\tif (inputType === 'name') {\r\n// \t\t\tsetName(inputValue);\r\n// \t\t} else if (inputType === 'email') {\r\n// \t\t\tsetEmail(inputValue);\r\n// \t\t} else {\r\n// \t\t\tsetMessage(inputValue);\r\n// \t\t}\r\n// \t};\r\n\r\n// \tconst handleFormSubmit = (e) => {\r\n// \t\t// Preventing the default behavior of the form submit (which is to refresh the page)\r\n// \t\te.preventDefault();\r\n\r\n// \t\t// First we check to see if the email is not valid or if the userName is empty. If so we set an error message to be displayed on the page.\r\n// \t\tif (!name) {\r\n// \t\t\tsetError('A valid name is required.');\r\n// \t\t\t// We want to exit out of this code block if something is wrong so that the user can correct it\r\n// \t\t\treturn;\r\n// \t\t\t// Then we check to see if the password is not valid. If so, we set an error message regarding the password.\r\n// \t\t}\r\n// \t\tif(!validateEmail(email) || !email) {\r\n// \t\t\tsetError('A valid email is required.');\r\n// \t\t\treturn;\r\n// \t\t}\r\n\r\n// \t\tif (!message) {\r\n// \t\t\tsetError('Message is required');\r\n// \t\t\treturn;\r\n// \t\t}\r\n// \t\tconst msg = 'Thank you for your message, ' + name + '! I will get back to you as soon as possible.';\r\n// \t\tsetWelcomeMessage(msg);\r\n\r\n// \t\t// If everything goes according to plan, we want to clear out the input after a successful registration.\r\n// \t\tsetName('');\r\n// \t\tsetEmail('');\r\n// \t\tsetMessage('');\r\n// \t};\r\n\r\n// \treturn (\r\n// \t\t<Container>\r\n// \t\t\t<Row>\r\n// \t\t\t\t<div className=\"jumbotron jumbotron-fluid mb-0\">\r\n// \t\t\t\t\t<Container>\r\n// \t\t\t\t\t\t<h1 className=\"display-4 pb-0 pb-sm-0 pb-md-0 mb-2 text-center\">Contact Me</h1>\r\n// \t\t\t\t\t</Container>\r\n// \t\t\t\t</div>\r\n// \t\t\t</Row>\r\n\r\n// \t\t\t{/* Image of me and a paragraph next to the picture built in Bootstrap */}\r\n// \t\t\t<Row>\r\n// \t\t\t\t<Container>\r\n// \t\t\t\t\t<Form className=\"form\">\r\n// \t\t\t\t\t\t<Form.Group>\r\n// \t\t\t\t\t\t\t<Form.Label htmlFor=\"name\">Name</Form.Label>\r\n// \t\t\t\t\t\t\t<Form.Control onChange={handleInputChange} type=\"text\" placeholder=\"Enter name\" name=\"name\" value={name} required />\r\n// \t\t\t\t\t\t</Form.Group>\r\n// \t\t\t\t\t\t<Form.Group>\r\n// \t\t\t\t\t\t\t<Form.Label>Email address</Form.Label>\r\n// \t\t\t\t\t\t\t<Form.Control onChange={handleInputChange} type=\"email\" placeholder=\"name@example.com\" name=\"email\" value={email} required />\r\n// \t\t\t\t\t\t</Form.Group>\r\n// \t\t\t\t\t\t<Form.Group>\r\n// \t\t\t\t\t\t\t<Form.Label htmlFor=\"message\">Message</Form.Label>\r\n// \t\t\t\t\t\t\t<Form.Control onChange={handleInputChange} as=\"textarea\" rows={3} required name=\"message\" value={message} />\r\n// \t\t\t\t\t\t</Form.Group>\r\n\r\n// \t\t\t\t\t\t<Button variant=\"primary\" type=\"submit\" onClick={handleFormSubmit}>Submit</Button>\r\n// \t\t\t\t\t</Form>\r\n// \t\t\t\t\t{error && (\r\n// \t\t\t\t\t\t<div>\r\n// \t\t\t\t\t\t\t<p className=\"error-text\">{error}</p>\r\n// \t\t\t\t\t\t</div>\r\n// \t\t\t\t\t)}\r\n// \t\t\t\t\t<Alert variant=\"success\">\r\n// \t\t\t\t\t\t<p>{welcomeMessage}</p>\r\n//   \t\t\t\t\t</Alert>\r\n// \t\t\t\t</Container>\r\n// \t\t\t</Row>\r\n// \t\t</Container>\r\n// \t);\r\n// }\r\n\r\n// export default Contact;\r\n"]},"metadata":{},"sourceType":"module"}